<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAADn/GwA9/3YAPf/MAD3/+QA+/4QAAAAAAAAAAAA9/34APf/3AD3/xgA9/3EAOv8WAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAADr/FgA9/5MAPf/4AD3//wA9//8APf//AD3//gA3/w4AAP8CAD3//AA9//8APf//AD3//wA9
        //MAPf+BAED/DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAA9/z8APf/mAD3//wA9//8APf//AD3//wA9//8APf/MAAD/AQAAAAAAPP+6AD3//wA9
        //8APf//AD3//wA9//8APf/YAD7/LQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        //kAPP9RAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+
        /0YAPf/sAD3//wA9//8APf//AD3//wA9//8APf//AD3//wA9//8APf//AD3//wA9//8APf//AD3//wA9
        //8APf/qADz/RAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAABA/xwAPf+mAD3//gA9//8APf//AD3//wA9//8APf//AD3//wA9//8APf//AD3//wA9
        //8APf/+AD3/pAA7/xoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO/8nAD3/jwA9/9kAPf//AD3//wA9//8APf//AD3//wA9
        //8APf/YAD3/jgA7/ycAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8/xEAPP88ADz/RAA8
        /0QAPf87ADz/EQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////HP//+Bgf//AYD//gfgf/wf+D/4f/4f8P//D/D/
        /w/h//+H4fw/h+P4H8fj8A/H4/APx+PwD8fj8A/H4/gfx+P8P8f//////f//v/h//h/4P/wf/B/4P/4H
        4H//AAD//4AB///gB/////////////////8=
</value>
  </data>
</root>